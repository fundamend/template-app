name: Release Dev

on:
  push:
    branches:
      - 'dev'

jobs:
  sentry-release-upload:
    name: Sentry Release Upload (${{ matrix.arrays.name }})
    # This action should not run in any mirrors (used as workaround for Cloudflare Pages not supporting monorepos)
    if: ${{ !contains(github.repository, 'mirror') }}
    runs-on: ubuntu-latest
    environment: preview
    env:
      CLERK_FRONTEND_API: ${{ secrets.CLERK_FRONTEND_API }}
      JWT_VERIFICATION_KEY: ${{ secrets.JWT_VERIFICATION_KEY }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      NODE_VERSION: ${{ secrets.NODE_VERSION }}
      PUBLIC_CLERK_FRONTEND_API: ${{ secrets.PUBLIC_CLERK_FRONTEND_API }}
      PUBLIC_NODE_ENV: ${{ secrets.PUBLIC_NODE_ENV }}
      PUBLIC_SENTRY_DSN: ${{ secrets.PUBLIC_SENTRY_DSN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    strategy:
      matrix:
        arrays:
          [
            {
              name: 'app',
              working-directory: 'packages/app',
              build-command: 'npm run prod'
            },
            {
              name: 'www',
              working-directory: 'packages/www',
              build-command: 'npm run prod'
            },
            {
              name: 'worker-test',
              working-directory: 'packages/worker-test',
              build-command: 'npm run prod:preview'
            },
            {
              name: 'worker-stripe',
              working-directory: 'packages/worker-stripe',
              build-command: 'npm run prod:preview'
            }
          ]
    steps:
      - name: Sentry Release Upload
        uses: fundamend/action-sentry-release-upload@main
        with:
          environment: 'preview'
          sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN}}
          sentry-organization: 'decouplr'
          sentry-project: ${{ matrix.arrays.name }}
          working-directory: ${{ matrix.arrays.working-directory }}
          build-command: ${{ matrix.arrays.build-command }}

  publish-workers:
    name: Publish Workers (${{ matrix.arrays.name }})
    # This action should not run in any mirrors (used as workaround for Cloudflare Pages not supporting monorepos)
    if: ${{ !contains(github.repository, 'mirror') }}
    runs-on: ubuntu-latest
    environment: preview
    env:
      CLERK_FRONTEND_API: ${{ secrets.CLERK_FRONTEND_API }}
      JWT_VERIFICATION_KEY: ${{ secrets.JWT_VERIFICATION_KEY }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      NODE_VERSION: ${{ secrets.NODE_VERSION }}
      PUBLIC_CLERK_FRONTEND_API: ${{ secrets.PUBLIC_CLERK_FRONTEND_API }}
      PUBLIC_NODE_ENV: ${{ secrets.PUBLIC_NODE_ENV }}
      PUBLIC_SENTRY_DSN: ${{ secrets.PUBLIC_SENTRY_DSN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    strategy:
      matrix:
        arrays:
          [
            { name: 'test', working-directory: 'packages/worker-test' },
            { name: 'stripe', working-directory: 'packages/worker-stripe' }
          ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: yarn
      - name: Publish Worker
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: ${{ matrix.arrays.working-directory }}
          command: publish --env preview

  publish-pages:
    name: Publish Pages (${{ matrix.arrays.name }})
    # This action should not run in any mirrors (used as workaround for Cloudflare Pages not supporting monorepos)
    if: ${{ !contains(github.repository, 'mirror') }}
    runs-on: ubuntu-latest
    environment: preview
    env:
      CLERK_FRONTEND_API: ${{ secrets.CLERK_FRONTEND_API }}
      JWT_VERIFICATION_KEY: ${{ secrets.JWT_VERIFICATION_KEY }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      NODE_VERSION: ${{ secrets.NODE_VERSION }}
      PUBLIC_CLERK_FRONTEND_API: ${{ secrets.PUBLIC_CLERK_FRONTEND_API }}
      PUBLIC_NODE_ENV: ${{ secrets.PUBLIC_NODE_ENV }}
      PUBLIC_SENTRY_DSN: ${{ secrets.PUBLIC_SENTRY_DSN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    strategy:
      matrix:
        arrays:
          [
            { name: 'www', working-directory: 'packages/www' },
            { name: 'app', working-directory: 'packages/app' }
          ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: yarn

      - name: Build page
        shell: bash
        working-directory: ${{ matrix.arrays.working-directory }}
        run: yarn prod

      - name: Publish page
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: ${{ matrix.arrays.working-directory }}
          command: pages publish build --branch dev --commit-dirty true --project-name ${{ matrix.arrays.name }}
